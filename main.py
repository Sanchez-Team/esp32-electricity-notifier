import gsm
import power
import telegram_sim800l as telegram
import _thread
from utime import sleep
import time

# -- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è --

# –í–∞—à–∞ –∞–¥—Ä–µ—Å–∞, —è–∫–∞ –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∞ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –≤—ñ–∑—É–∞–ª—å–Ω–∏—Ö —Ü—ñ–ª–µ–π.
address = "–≤—É–ª. –°—Ç–µ–ø–∞–Ω–∞ –ë–∞–Ω–¥–µ—Ä–∏, 107"
# –ê–π–¥—ñ —á–∞—Ç—É (–ê–±–æ –æ—Å–æ–±–∏—Å—Ç–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å, –∞–±–æ –≥—Ä—É–ø–æ–≤–∏–π —á–∞—Ç)
# –ú–æ–∂–Ω–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑-–∑–∞ –¥–æ–ø–æ–º–æ–≥–∏ —Ü—å–æ–≥–æ –±–æ—Ç–∞: https://t.me/GetChatID_IL_BOT
chat_id = 0
# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è GSM –º–æ–¥—É–ª—è
# –ü—ñ–Ω –Ω–∞ ESP32, –∫—É–¥–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π —Å–∞–º GSM –º–æ–¥—É–ª—å
gsm_uart_pin = 21
# –®–≤–∏–¥–∫—ñ—Å—Ç—å –∫–∞–Ω–∞–ª—É –¥–∞–Ω–∏—Ö
gsm_baud = 115200
# –ù–∞–∑–≤–∞ –º–µ—Ä–µ–∂—ñ Wi-Fi
wifi_ssid = "Alexandro"
# –ü–∞—Ä–æ–ª—å –º–µ—Ä–µ–∂—ñ Wi-Fi
wifi_password = "qwerty123"
# –†–µ–∂–∏–º –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É
# 0 = –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ Wi-Fi
# 1 = –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —Å—Ç—ñ–ª—å–Ω–∏–∫–æ–≤—É –º–µ—Ä–µ–∂—É
mode = 0
# –î–æ–∑–≤—ñ–ª –Ω–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Ä–æ—É–º—ñ–Ω–≥–æ–≤–æ—ó –º–µ—Ä–µ–∂—ñ.
# –¶–µ –≤–∫–ª—é—á–∞—î —É —Å–µ–±–µ "–ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π –†–æ—É–º—ñ–Ω–≥" —Ç–∞–∫ —ñ –∑–≤–∏—á–∞–π–Ω–∏–π, –º—ñ–∂–Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π —Ä–æ—É–º—ñ–Ω–≥
roaming = True
# –ê–Ω–∞–ª–æ–≥–æ–≤–∏–π –ø–æ—Ä—Ç –∫—É–¥–∏ –ø—ñ–¥'—î–¥–Ω–∞–Ω–∏–π –º–æ–¥—É–ª—å –∑–∞—Ä—è–¥–∫–∏ (TP4046), –∑–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º, —Ü–µ GPIO0
charging_module_analogue_port = 0

Messages = [
    f"üïØÔ∏è –ï–ª–µ–∫—Ç—Ä–æ–ø–æ—Å—Ç–∞—á–∞–Ω–Ω—è –≤—ñ–¥—Å—É—Ç–Ω—î –ø–æ –∞–¥—Ä–µ—Å—ñ '{address}'."
    f"üí° –ï–ª–µ–∫—Ç—Ä–æ–ø–æ—Å—Ç–∞—á–∞–Ω–Ω—è –≤—ñ–¥–Ω–æ–≤–∏–ª–æ—Å—è –ø–æ –∞–¥—Ä–µ—Å—ñ '{address}'."
]

# –¢—É—Ç –∫–æ–¥

is_ready = False
is_cellular = False
is_wifi = False
is_power_outage = False

connected = gsm.ConnectToInternet(mode, wifi_ssid, wifi_password, gsm_uart_pin, gsm_baud, roaming)
if connected:
    is_ready = True
    if mode == 0:
        is_wifi = True
    if mode == 1:
        is_cellular = True
else:
    raise OSError("–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫. –ó—Ä–æ–±—ñ—Ç—å Issue –Ω–∞ GitHub —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ.")

if is_ready == True:
    # –¢–ò–ú–ß–ê–°–û–í–û: –ó–∞–≥–æ—Ç–æ–≤–∫–∞ –ø—ñ–¥ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –º–æ–¥—É–ª—è –∂–∏–≤–ª–µ–Ω–Ω—è
    def check_power():
        power_status = power.CheckPower(charging_module_analogue_port)
        if power_status < 1:
            global when_power_outage
            when_power_outage = time.localtime()

            pass
else:
    raise OSError("–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫. –ó—Ä–æ–±—ñ—Ç—å Issue –Ω–∞ GitHub —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ.")